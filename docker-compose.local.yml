version: "3.9"

volumes:
  frontend_data:
  media:
  pg_data:


services:
  web:
    container_name: star_burger_web
    build:
        context: .
        dockerfile: ./etc/backend/Dockerfile
    command: bash -c 'python manage.py collectstatic --no-input &&
      python -m gunicorn -b 0.0.0.0:8080 star_burger.wsgi:application'
    image: "star_burger_web:latest"
    environment:
      - POSTGRES_HOST=db
      - STATIC_DIR_NAME=frontend
      - SECRET_KEY=DebugSecretKey
      - DEBUG=true
    volumes:
      - frontend_data:/code/frontend
      - media:/code/media
    depends_on:
      - db

  db:
    container_name: star_burger_db
    image: "postgres:14.3-bullseye"
    volumes:
      - pg_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=star_burger
      - POSTGRES_USER=some_user
      - POSTGRES_PASSWORD=P@ssw0rd

  frontend:
    container_name: star_burger_frontend
    build:
      context: .
      dockerfile: ./etc/frontend/Dockerfile
    image: star_burger_frontend:latest
    volumes:
      - frontend_data:/frontend

  nginx:
    container_name: star_burger_nginx
    image: "nginx:stable"
    ports:
      - "80:80"
    volumes:
      - frontend_data:/frontend
      - media:/media
      - ./etc/nginx/conf.d:/etc/nginx/conf.d
    depends_on:
      - web
